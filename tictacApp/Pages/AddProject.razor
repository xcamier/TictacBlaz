@page "/projects/addProject"
@page "/projects/{ProjectId:int}/addProject"

@using Data
@using tictacApp.Services

@inject ProjectsService ProjectsService
@inject NavigationManager Navigation
@inject ISnackbar Snackbar


@if (_project is not null)
{
    <ProjectForm Busy="@_busy" 
                   Project="@_project" 
                   IsAdd="true"
                   CancelRequest="Cancel"
                   ValidationResult="@(async (success) => await ValidationResultAsync(success))" />

    @if (_error)
    {
        <MudAlert Class="mt-4" Severity="Severity.Error" Variant="Variant.Filled">@_errorMessage</MudAlert>
    }
}

@code {
    [Parameter]
    public int? ProjectId { get; set; } = null;
    
    private Project? _project { get; set; }
    private bool _busy;
    private bool _error;
    private string _errorMessage = string.Empty;

    protected override Task OnInitializedAsync()
    {
        _project = new Project();
        _project.ParentProjectId = ProjectId;

        return base.OnInitializedAsync();
    }

    private async Task ValidationResultAsync(bool success)
    {
        if (_busy)
        {
            return;
        }

        if (!success)
        {
            Snackbar.Add("Unable to add the project", Severity.Warning);

            ResetErrorMessage();
            return;
        }

        try
        {
            _busy = true;

            bool res = await ProjectsService.AddProjectAsync(_project);

            ResetErrorMessage();

            if (res )
            {
                Snackbar.Add("Project added successfully", Severity.Success);
                GoBackToList();
            }
            else
            {
                Snackbar.Add("Error when adding the project", Severity.Warning);
            }
        }
        catch (Exception ex)
        {
            _error = true;
            _errorMessage = ex.Message;
        }
        finally
        {
            _busy = false;
        }
    }

    // Back to list.
    private void Cancel()
    {
        GoBackToList();
    }

    private void GoBackToList()
    {
        string url = string.Empty;
        if (ProjectId.HasValue)
        {
            url = $"/projects/{ProjectId}";
        }
        else
        {
            url = "/projects";
        }
        Navigation.NavigateTo(url);
    }

    private void ResetErrorMessage()
    {
        _error = false;
        _errorMessage = string.Empty;
    }
}