// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using tictacApp.DataAccess;

#nullable disable

namespace tictacApp.Migrations
{
    [DbContext(typeof(TictacDBContext))]
    partial class TictacDBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.0");

            modelBuilder.Entity("TimeLogsTags", b =>
                {
                    b.Property<int>("TagsId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("TimeLogsId")
                        .HasColumnType("INTEGER");

                    b.HasKey("TagsId", "TimeLogsId");

                    b.HasIndex("TimeLogsId");

                    b.ToTable("TimeLogsTags");
                });

            modelBuilder.Entity("tictacApp.Data.Activity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .HasMaxLength(255)
                        .HasColumnType("TEXT");

                    b.Property<string>("Label")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("TEXT");

                    b.Property<int?>("ParentActivityId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("ParentActivityId");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("tictacApp.Data.Characteristic", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .HasMaxLength(255)
                        .HasColumnType("TEXT");

                    b.Property<string>("Label")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("TEXT");

                    b.Property<int?>("ParentCharacteristicId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("ParentCharacteristicId");

                    b.ToTable("Characteristics");
                });

            modelBuilder.Entity("tictacApp.Data.Objective", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .HasMaxLength(255)
                        .HasColumnType("TEXT");

                    b.Property<string>("Label")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("TEXT");

                    b.Property<int?>("ParentObjectiveId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("ParentObjectiveId");

                    b.ToTable("Objectives");
                });

            modelBuilder.Entity("tictacApp.Data.Tag", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Label")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Tags");
                });

            modelBuilder.Entity("tictacApp.Data.TimeLog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("ActivityId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("CharacteristicId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .HasMaxLength(140)
                        .HasColumnType("TEXT");

                    b.Property<int?>("ObjectiveId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("StartDate")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("TimeSpentInMin")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("ActivityId");

                    b.HasIndex("CharacteristicId");

                    b.HasIndex("ObjectiveId");

                    b.ToTable("TimeLogs");
                });

            modelBuilder.Entity("TimeLogsTags", b =>
                {
                    b.HasOne("tictacApp.Data.Tag", null)
                        .WithMany()
                        .HasForeignKey("TagsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("tictacApp.Data.TimeLog", null)
                        .WithMany()
                        .HasForeignKey("TimeLogsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("tictacApp.Data.Activity", b =>
                {
                    b.HasOne("tictacApp.Data.Activity", "ParentActivity")
                        .WithMany("SubActivities")
                        .HasForeignKey("ParentActivityId");

                    b.Navigation("ParentActivity");
                });

            modelBuilder.Entity("tictacApp.Data.Characteristic", b =>
                {
                    b.HasOne("tictacApp.Data.Characteristic", "ParentCharacteristic")
                        .WithMany("SubCharacteristics")
                        .HasForeignKey("ParentCharacteristicId");

                    b.Navigation("ParentCharacteristic");
                });

            modelBuilder.Entity("tictacApp.Data.Objective", b =>
                {
                    b.HasOne("tictacApp.Data.Objective", "ParentObjective")
                        .WithMany("SubObjectives")
                        .HasForeignKey("ParentObjectiveId");

                    b.Navigation("ParentObjective");
                });

            modelBuilder.Entity("tictacApp.Data.TimeLog", b =>
                {
                    b.HasOne("tictacApp.Data.Activity", "Activity")
                        .WithMany("TimeLogs")
                        .HasForeignKey("ActivityId");

                    b.HasOne("tictacApp.Data.Characteristic", "Characteristic")
                        .WithMany("TimeLogs")
                        .HasForeignKey("CharacteristicId");

                    b.HasOne("tictacApp.Data.Objective", "Objective")
                        .WithMany("TimeLogs")
                        .HasForeignKey("ObjectiveId");

                    b.Navigation("Activity");

                    b.Navigation("Characteristic");

                    b.Navigation("Objective");
                });

            modelBuilder.Entity("tictacApp.Data.Activity", b =>
                {
                    b.Navigation("SubActivities");

                    b.Navigation("TimeLogs");
                });

            modelBuilder.Entity("tictacApp.Data.Characteristic", b =>
                {
                    b.Navigation("SubCharacteristics");

                    b.Navigation("TimeLogs");
                });

            modelBuilder.Entity("tictacApp.Data.Objective", b =>
                {
                    b.Navigation("SubObjectives");

                    b.Navigation("TimeLogs");
                });
#pragma warning restore 612, 618
        }
    }
}
